"""
Generating a dataset where the golden patch is actually generated by swe-agent
To check how useful crosschecking with swt-agent is
"""
import json
import os.path
import re
import subprocess
from typing import Optional
import os.path
import re
import subprocess

import fire
from datasets import load_dataset, Dataset, DatasetDict, load_from_disk

from unidiff import PatchSet

# Load the dataset
def main(dataset_name: str = "princeton-nlp/SWE-bench_Lite", split: str = "test", swe_bench_result_dir = "results/experiments-swe-bench/20240402_sweagent_gpt4/trajs", output_file: str = "datasets/swe_agent_patches.json"):

    dataset = load_dataset(dataset_name)

    def load_swe_agent_patch(instance_id: str):
        traj_file = os.path.join(swe_bench_result_dir, f"{instance_id}.traj")
        if not os.path.exists(traj_file):
            return None
        with open(traj_file) as f:
            traj = json.load(f)
        sub = traj["info"].get("submission")
        return sub

    instance_ids = []
    new_examples = []
    for i, example in enumerate(dataset[split]):
        instance_id = example["instance_id"]
        patch = load_swe_agent_patch(instance_id)
        if patch is None:
            continue
        new_example = {
            **example,
            # The patch proposed by SWE-agent
            "patch": f"<patch>{patch}</patch>",
        }
        new_examples.append(new_example)
        instance_ids.append(instance_id)
    with open(output_file, "w") as f:
        json.dump(new_examples, f, indent=2)

if __name__ == "__main__":
    fire.Fire(main)

